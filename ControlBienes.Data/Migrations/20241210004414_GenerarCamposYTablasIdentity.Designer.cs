// <auto-generated />
using System;
using ControlBienes.Data.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControlBienes.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241210004414_GenerarCamposYTablasIdentity")]
    partial class GenerarCamposYTablasIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntBienAlmacen", b =>
                {
                    b.Property<long>("iIdBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdBien"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("iExistencia")
                        .HasColumnType("float")
                        .HasColumnName("iExistencia");

                    b.Property<long>("iIdAlmacen")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAlmacen");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<decimal?>("nCodigoArmonizado")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("nCodigoArmonizado");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sUnidadMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sUnidadMedida");

                    b.HasKey("iIdBien")
                        .HasName("PK__Bienes__23B12AED43C1BB2C");

                    b.HasIndex("iIdAlmacen");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdSubfamilia");

                    b.ToTable("Bienes", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntFuenteFinanciamiento", b =>
                {
                    b.Property<long>("iIdFuenteFinanciamiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFuenteFinanciamiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdFuenteFinanciamiento"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sClaveCompleta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sClaveCompleta");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdFuenteFinanciamiento")
                        .HasName("PK__FuentesF__150B2ED7CFB167E6");

                    b.ToTable("FuentesFinanciamiento", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMetodoAdquisicion", b =>
                {
                    b.Property<long>("iIdMetodoAdquisicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMetodoAdquisicion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMetodoAdquisicion"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdMetodoAdquisicion")
                        .HasName("PK__MetodosA__06B2CF47DA9F6382");

                    b.ToTable("MetodosAdquisicion", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMetodoCosteo", b =>
                {
                    b.Property<long>("iIdMetodoCosteo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMetodoCosteo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMetodoCosteo"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sAbreviacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sAbreviacion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdMetodoCosteo")
                        .HasName("PK__MetodosC__60D75273472B34A1");

                    b.ToTable("MetodosCosteo", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMovimiento", b =>
                {
                    b.Property<long>("iIdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMovimiento"));

                    b.Property<double?>("dImporteTotal")
                        .HasColumnType("float")
                        .HasColumnName("dImporteTotal");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("dtFechaResepcion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaResepcion");

                    b.Property<long>("iIdAlmacen")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAlmacen");

                    b.Property<long?>("iIdConceptoMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdConceptoMovimiento");

                    b.Property<long?>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long?>("iIdFuenteFinanciamiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFuenteFinanciamiento");

                    b.Property<long>("iIdMetodoAdquisicion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMetodoAdquisicion");

                    b.Property<long?>("iIdProgramaOperativo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdProgramaOperativo");

                    b.Property<long?>("iIdProveedor")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdProveedor");

                    b.Property<long>("iIdTipoMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoMovimiento");

                    b.Property<string>("sNumeroFactura")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNumeroFactura");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdMovimiento")
                        .HasName("PK__Movimien__99B69AD00E0FACCD");

                    b.HasIndex("iIdAlmacen");

                    b.HasIndex("iIdConceptoMovimiento");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdFuenteFinanciamiento");

                    b.HasIndex("iIdMetodoAdquisicion");

                    b.HasIndex("iIdProgramaOperativo");

                    b.HasIndex("iIdProveedor");

                    b.HasIndex("iIdTipoMovimiento");

                    b.ToTable("Movimientos", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMovimientoBien", b =>
                {
                    b.Property<long>("iIdMovimientoBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMovimientoBien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMovimientoBien"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("iIdBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    b.Property<long>("iIdBms")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBMS");

                    b.Property<long>("iIdMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMovimiento");

                    b.HasKey("iIdMovimientoBien")
                        .HasName("PK__Movimien__5230CCD48995684D");

                    b.HasIndex("iIdBien");

                    b.HasIndex("iIdBms");

                    b.HasIndex("iIdMovimiento");

                    b.ToTable("MovimientosBienes", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntProgramasOperativo", b =>
                {
                    b.Property<long>("iIdProgramaOperativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdProgramaOperativo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdProgramaOperativo"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdProgramaOperativo")
                        .HasName("PK__Programa__FC480E3149379B34");

                    b.ToTable("ProgramasOperativos", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntProveedor", b =>
                {
                    b.Property<long>("iIdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdProveedor"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdProveedor")
                        .HasName("PK__Proveedo__DA7D86475A3BE0BF");

                    b.ToTable("Proveedores", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntTipoMovimiento", b =>
                {
                    b.Property<long>("iIdTipoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoMovimiento"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoMovimiento")
                        .HasName("PK__TiposMov__F82CF26CA667C3FC");

                    b.ToTable("TiposMovimientos", "Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntZona", b =>
                {
                    b.Property<long>("iIdZona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdZona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdZona"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdAlmacen")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAlmacen");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdZona")
                        .HasName("PK__Zonas__F19B8E6683987BB2");

                    b.HasIndex("iIdAlmacen");

                    b.ToTable("Zonas", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CaracteristicaBien.EntCaracteristicaBien", b =>
                {
                    b.Property<long>("iIdCaracteristicaBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCaracteristicaBien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCaracteristicaBien"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sEtiqueta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sEtiqueta");

                    b.HasKey("iIdCaracteristicaBien")
                        .HasName("PK__Caracter__0B130FBBE56A08AC");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdSubfamilia");

                    b.ToTable("CaracteristicasBienes", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajo", b =>
                {
                    b.Property<long>("iIdCentroTrabajo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCentroTrabajo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCentroTrabajo"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdMunicipio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sClave")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("sClave");

                    b.Property<string>("sDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDireccion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdCentroTrabajo")
                        .HasName("PK__CentrosT__B9EC0BA036364F32");

                    b.HasIndex("iIdMunicipio");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("CentrosTrabajo", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajoTurno", b =>
                {
                    b.Property<long>("iIdCentroTrabajoTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCentroTrabajoTurno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCentroTrabajoTurno"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdCentroTrabajo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCentroTrabajo");

                    b.Property<long>("iIdTurno")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTurno");

                    b.HasKey("iIdCentroTrabajoTurno")
                        .HasName("PK__CentroTr__1F85847BFFD732F9");

                    b.HasIndex("iIdCentroTrabajo");

                    b.HasIndex("iIdTurno");

                    b.ToTable("CentroTrabajoTurnos", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.ClaseVehicular.EntClaseVehicular", b =>
                {
                    b.Property<long>("iIdClaseVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdClaseVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdClaseVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdClaseVehicular")
                        .HasName("PK__ClasesVe__99F76CB244AFF5AF");

                    b.ToTable("ClasesVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.ClaveVehicular.EntClaveVehicular", b =>
                {
                    b.Property<long>("iIdClaveVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdClaveVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdClaveVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdClaveVehicular")
                        .HasName("PK__ClavesVe__7D9FC51A2925E926");

                    b.ToTable("ClavesVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Color.EntColor", b =>
                {
                    b.Property<long>("iIdColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdColor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdColor"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sCodigoRGB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("sCodigoRGB");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdColor")
                        .HasName("PK__Colores__C17DA53921018504");

                    b.ToTable("Colores", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CombustibleVehicular.EntCombustibleVehicular", b =>
                {
                    b.Property<long>("iIdCombustibleVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCombustibleVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCombustibleVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdCombustibleVehicular")
                        .HasName("PK__Combusti__C91CB5FD7C1B0D1F");

                    b.ToTable("CombustiblesVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Documento.EntDocumento", b =>
                {
                    b.Property<long>("iIdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDocumentos");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDocumento"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdMotivoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMotivoTramite");

                    b.Property<long>("iIdSubModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    b.Property<long>("iIdTipoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoTramite");

                    b.Property<string>("sAbreviacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sAbreviacion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdDocumento")
                        .HasName("PK__Document__5506EB498AAC10BE");

                    b.HasIndex("iIdMotivoTramite");

                    b.HasIndex("iIdSubModulo");

                    b.HasIndex("iIdTipoTramite");

                    b.ToTable("Documentos", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntAlmacen", b =>
                {
                    b.Property<long>("iIdAlmacen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAlmacen");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdAlmacen"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdCuenta")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCuenta");

                    b.Property<long>("iIdEmpleado")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    b.Property<long>("iIdMetodoCosteo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMetodoCosteo");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<string>("sDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDireccion");

                    b.Property<string>("sFolioEntrada")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sFolioEntrada");

                    b.Property<string>("sFolioSalida")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sFolioSalida");

                    b.Property<string>("sHorario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sHorario");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdAlmacen")
                        .HasName("PK__Almacene__7D1F7ADE0C6F6157");

                    b.HasIndex("iIdCuenta");

                    b.HasIndex("iIdEmpleado");

                    b.HasIndex("iIdMetodoCosteo");

                    b.HasIndex("iIdPeriodo");

                    b.ToTable("Almacenes", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntAnaquel", b =>
                {
                    b.Property<long>("iIdAnaquel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAnaquel");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdAnaquel"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdAlmacen")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAlmacen");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdAnaquel")
                        .HasName("PK__Anaquele__9358EDDE0ED56108");

                    b.HasIndex("iIdAlmacen");

                    b.ToTable("Anaqueles", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntConceptoMovimiento", b =>
                {
                    b.Property<long>("iIdConceptoMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdConceptoMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdConceptoMovimiento"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdTipoMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoMovimiento");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdConceptoMovimiento")
                        .HasName("PK__Concepto__80B8460FC399087C");

                    b.HasIndex("iIdTipoMovimiento");

                    b.ToTable("ConceptosMovimientos", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EstadoFisico.EntEstadoFisico", b =>
                {
                    b.Property<long>("iIdEstadoFisico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoFisico");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdEstadoFisico"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdEstadoFisico")
                        .HasName("PK__EstadosF__B8DBE8994F9DBBC2");

                    b.ToTable("EstadosFisicos", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EstadoGeneral.EntEstadoGeneral", b =>
                {
                    b.Property<long>("iIdEstadoGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoGeneral");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdEstadoGeneral"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdEstadoGeneral")
                        .HasName("PK__EstadosG__CFEBEA803730D179");

                    b.ToTable("EstadosGenerales", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Familia.EntFamilia", b =>
                {
                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<int?>("iNumeroCuenta")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroCuenta");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdFamilia")
                        .HasName("PK__Familias__63F8F27CBA68F05B");

                    b.HasIndex("iIdTipoBien");

                    b.ToTable("Familias", "Catalogo", t =>
                        {
                            t.HasTrigger("TRG_Familia_UpdateINumeroCuenta");
                        });
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.LineaVehicular.EntLineaVehicular", b =>
                {
                    b.Property<long>("iIdLineaVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdLineaVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdLineaVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdLineaVehicular")
                        .HasName("PK__LineasVe__432F6A745E1D072F");

                    b.ToTable("LineasVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Marca.EntMarca", b =>
                {
                    b.Property<long>("iIdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMarca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMarca"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdMarca")
                        .HasName("PK__Marcas__297E604DA230FCF0");

                    b.ToTable("Marcas", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.OrigenValor.EntOrigenValor", b =>
                {
                    b.Property<long>("iIdOrigenValor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdOrigenValor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdOrigenValor"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sOrigen")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("sOrigen");

                    b.HasKey("iIdOrigenValor")
                        .HasName("PK__Origenes__E9F1435C7AB8AE51");

                    b.ToTable("OrigenesValores", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Resguardante.EntResguardante", b =>
                {
                    b.Property<long>("iIdResguardante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdResguardante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdResguardante"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<bool>("bResponsable")
                        .HasColumnType("bit")
                        .HasColumnName("bResponsable");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<long>("iIdPersona")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPersona");

                    b.Property<long>("iIdTipoResponsable")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoResponsable");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<int>("iNoConvenio")
                        .HasColumnType("int")
                        .HasColumnName("iNoConvenio");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdResguardante")
                        .HasName("PK__Resguard__F8A9B4DF033458B5");

                    b.HasIndex("iIdPeriodo");

                    b.HasIndex("iIdPersona");

                    b.HasIndex("iIdTipoResponsable");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("Resguardantes", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", b =>
                {
                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<double>("dValorRecuperable")
                        .HasColumnType("float")
                        .HasColumnName("dValorRecuperable");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<int?>("iNumeroCuenta")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroCuenta");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdSubfamilia")
                        .HasName("PK__Subfamil__492436A89E6949F8");

                    b.HasIndex("iIdFamilia");

                    b.ToTable("Subfamilias", "Catalogo", t =>
                        {
                            t.HasTrigger("TRG_Subfamilia_UpdateINumeroCuenta");
                        });
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoAdquisicion.EntTipoAdquisicion", b =>
                {
                    b.Property<long>("iIdTipoAdquisicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAdquisicion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoAdquisicion"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoAdquisicion")
                        .HasName("PK__TiposAdq__EEEF1254E43B7DDE");

                    b.ToTable("TiposAdquisiciones", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoAfectacion.EntTipoAfectacion", b =>
                {
                    b.Property<long>("iIdTipoAfectacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAfectacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoAfectacion"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoAfectacion")
                        .HasName("PK__TiposAfe__83D25A256D08CF76");

                    b.ToTable("TiposAfectaciones", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", b =>
                {
                    b.Property<long>("iIdTipoBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoBien"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoBien")
                        .HasName("PK__TiposBie__4B7388D5539DAE6D");

                    b.ToTable("TiposBienes", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoInmueble.EntTipoInmueble", b =>
                {
                    b.Property<long>("iIdTipoInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoInmueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoInmueble"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoInmueble")
                        .HasName("PK__TiposInm__49B853B922078C6C");

                    b.ToTable("TiposInmuebles", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoVehicular.EntTipoVehicular", b =>
                {
                    b.Property<long>("iIdTipoVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoVehicular")
                        .HasName("PK__TiposVeh__5F0D0A5FBFCFF84D");

                    b.ToTable("TiposVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Titular.EntTitular", b =>
                {
                    b.Property<long>("iIdTitular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTitular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTitular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdCentroTrabajoTurno")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCentroTrabajoTurno");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTitular")
                        .HasName("PK__Titulare__EF0E0BAAA21D90D9");

                    b.HasIndex("iIdCentroTrabajoTurno");

                    b.ToTable("Titulares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Turno.EntTurno", b =>
                {
                    b.Property<long>("iIdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTurno");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTurno"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTurno")
                        .HasName("PK__Turnos__500F725A491F3FA7");

                    b.ToTable("Turnos", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", b =>
                {
                    b.Property<long>("iIdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUbicacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdUbicacion"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.HasKey("iIdUbicacion")
                        .HasName("PK__Ubicacio__D58FC05B12FF04F8");

                    b.ToTable("Ubicaciones", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.UsoInmueble.EntUsoInmueble", b =>
                {
                    b.Property<long>("iIdUsoInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsoInmueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdUsoInmueble"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdUsoInmueble")
                        .HasName("PK__UsosInmu__07C98802D1A7AD5A");

                    b.ToTable("UsosInmuebles", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.VersionVehicular.EntVersionVehicular", b =>
                {
                    b.Property<long>("iIdVersionVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdVersionVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdVersionVehicular"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdVersionVehicular")
                        .HasName("PK__Versione__350D2B2C8729296B");

                    b.ToTable("VersionesVehiculares", "Catalogo");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.BMS.EntBms", b =>
                {
                    b.Property<long>("iIdBms")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBMS");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdBms"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<double>("dPrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioUnitario");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("iCantidad")
                        .HasColumnType("int")
                        .HasColumnName("iCantidad");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<decimal?>("nCodigoArmonizado")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("nCodigoArmonizado");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.Property<string>("sUnidadMedida")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sUnidadMedida");

                    b.HasKey("iIdBms")
                        .HasName("PK__BMS__9B045F82B0BD58EE");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdSubfamilia");

                    b.ToTable("BMS", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Cuenta.EntCuenta", b =>
                {
                    b.Property<long>("iIdCuenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCuenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCuenta"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("iNivel")
                        .HasColumnType("int")
                        .HasColumnName("iNivel");

                    b.Property<string>("sClave")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sClave");

                    b.Property<string>("sNivelCompleto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sNivelCompleto");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdCuenta")
                        .HasName("PK__Cuentas__E3924335583874CA");

                    b.ToTable("Cuentas", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Municipio.EntMunicipio", b =>
                {
                    b.Property<long>("iIdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMunicipio"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdMunicipio")
                        .HasName("PK__Municipi__D31789DFC21F17C2");

                    b.ToTable("Municipios", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Nacionalidad.EntNacionalidad", b =>
                {
                    b.Property<long>("iIdNacionalidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdNacionalidad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdNacionalidad"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdNacionalidad")
                        .HasName("PK__Nacional__435DAE1AFAA51251");

                    b.ToTable("Nacionalidades", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Nombramiento.EntNombramiento", b =>
                {
                    b.Property<long>("iIdNombramiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdNombramiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdNombramiento"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdNombramiento")
                        .HasName("PK__Nombrami__425CC5BCBADE9DC5");

                    b.ToTable("Nombramientos", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Periodo.EntPeriodo", b =>
                {
                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaFinal")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaFinal");

                    b.Property<DateTime>("dtFechaInicio")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaInicio");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("iIdPeriodo")
                        .HasName("PK__Periodos__93D9B9104F62A082");

                    b.ToTable("Periodos", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.TipoNivel.EntTipoNivel", b =>
                {
                    b.Property<long>("iIdTipoNivel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoNivel");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoNivel"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("iNivel")
                        .HasColumnType("int")
                        .HasColumnName("iNivel");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoNivel")
                        .HasName("PK__TiposNiv__D770DD7B453AB8A8");

                    b.ToTable("TiposNiveles", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.TipoResponsable.EntTipoResponsable", b =>
                {
                    b.Property<long>("iIdTipoResponsable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoResponsable");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoResponsable"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoResponsable")
                        .HasName("PK__TiposRes__02F6E9C9B8A896AE");

                    b.ToTable("TiposResponsables", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", b =>
                {
                    b.Property<long>("iIdUnidadAdministrativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdUnidadAdministrativa"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<long>("iIdTipoNivel")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoNivel");

                    b.Property<string>("sNivelCompleto")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sNivelCompleto");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdUnidadAdministrativa")
                        .HasName("PK__Unidades__D77F6B63230E50D4");

                    b.HasIndex("iIdPeriodo");

                    b.HasIndex("iIdTipoNivel");

                    b.ToTable("UnidadesAdministrativas", "General");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Afectacion.EntAfectacion", b =>
                {
                    b.Property<long>("iIdAfectacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAfectacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdAfectacion"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdAfectacion")
                        .HasName("PK__Afectaci__3330A390631BB483");

                    b.ToTable("Afectaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Alta.EntDetalleAlta", b =>
                {
                    b.Property<long>("iIdDetalleAlta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleAlta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleAlta"));

                    b.Property<double>("dPrecioDepreciado")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDepreciado");

                    b.Property<double>("dPrecioDesechable")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDesechable");

                    b.Property<double>("dPrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioUnitario");

                    b.Property<DateTime>("dtFechaAdquisicion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAdquisicion");

                    b.Property<DateTime>("dtFechaInicioUso")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaInicioUso");

                    b.Property<int>("iAniosVida")
                        .HasColumnType("int")
                        .HasColumnName("iAniosVida");

                    b.Property<long>("iIdBms")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBMS");

                    b.Property<long?>("iIdDatoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("idDatoInmueble");

                    b.Property<long>("iIdEstadoFisico")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoFisico");

                    b.Property<long>("iIdEtapa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    b.Property<long?>("iIdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFactura");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long?>("iIdLicitacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdLicitacion");

                    b.Property<long>("iIdMunicipio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    b.Property<long>("iIdSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<long>("iIdTipoAdquisicion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAdquisicion");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUbicacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUbicacion");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<int>("iNumeroBienes")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroBienes");

                    b.Property<string>("sCaracteristicas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCaracteristicas");

                    b.Property<string>("sCuentaActivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActivo");

                    b.Property<string>("sCuentaActualizacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActualizacion");

                    b.Property<string>("sCuentaPorPagar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCuentaPorPagar");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sFolioAnterior")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sFolioAnterior");

                    b.Property<string>("sFolioBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sNoSeries")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sNoSeries");

                    b.Property<string>("sObservacionBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionBien");

                    b.Property<string>("sObservacionResponsable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionResponsable");

                    b.Property<string>("sOrdenCompra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sOrdenCompra");

                    b.Property<string>("sPartidaEspecifica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sPartidaEspecifica");

                    b.Property<string>("sReferenciaConac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sReferenciaCONAC");

                    b.Property<string>("sRequisicion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sRequisicion");

                    b.Property<string>("sResguardantes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sResguardantes");

                    b.Property<string>("sSustituyeBv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sSustituyeBV");

                    b.HasKey("iIdDetalleAlta")
                        .HasName("PK__Detalles__31BE241794DE35FC");

                    b.HasIndex("iIdBms");

                    b.HasIndex("iIdDatoInmueble");

                    b.HasIndex("iIdEstadoFisico");

                    b.HasIndex("iIdEtapa");

                    b.HasIndex("iIdFactura");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdLicitacion");

                    b.HasIndex("iIdMunicipio");

                    b.HasIndex("iIdSolicitud");

                    b.HasIndex("iIdSubfamilia");

                    b.HasIndex("iIdTipoAdquisicion");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUbicacion");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("DetallesAltas", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntBaja", b =>
                {
                    b.Property<long>("iIdBaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBaja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdBaja"));

                    b.Property<DateTime>("dtFehaDocumento")
                        .HasColumnType("date")
                        .HasColumnName("dtFehaDocumento");

                    b.Property<long>("iIdEmpleado")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sFolioBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sFolioDictamen")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("sFolioDictamen");

                    b.Property<string>("sListaDocunetario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sListaDocunetario");

                    b.Property<string>("sLugarResguardo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sLugarResguardo");

                    b.Property<string>("sNombreSolicitante")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombreSolicitante");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdBaja")
                        .HasName("PK__Bajas__25A062524CB5A5B4");

                    b.HasIndex("iIdEmpleado");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("Bajas", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntDetalleBaja", b =>
                {
                    b.Property<long>("iIdDetalleBaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleBaja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleBaja"));

                    b.Property<long>("iIdBaja")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBaja");

                    b.Property<long>("iIdBajaInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBajaInmueble");

                    b.Property<long>("iIdSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    b.HasKey("iIdDetalleBaja")
                        .HasName("PK__Detalles__30C0102688312FD2");

                    b.HasIndex("iIdBaja");

                    b.HasIndex("iIdBajaInmueble");

                    b.HasIndex("iIdSolicitud");

                    b.ToTable("DetallesBajas", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.BajaInmueble.EntBajaInmueble", b =>
                {
                    b.Property<long>("iIdBajaInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBajaInmueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdBajaInmueble"));

                    b.Property<double>("dValorBaja")
                        .HasColumnType("float")
                        .HasColumnName("dValorBaja");

                    b.Property<double>("dValorBienPermutadoConstruccion")
                        .HasColumnType("float")
                        .HasColumnName("dValorBienPermutadoConstruccion");

                    b.Property<double>("dValorBienPermutadoTerreno")
                        .HasColumnType("float")
                        .HasColumnName("dValorBienPermutadoTerreno");

                    b.Property<DateTime>("dtFechaBaja")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaBaja");

                    b.Property<DateTime>("dtFechaBajaSistema")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaBajaSistema");

                    b.Property<DateTime>("dtFechaDesincorporacion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaDesincorporacion");

                    b.Property<DateTime>("dtFechaDonacion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaDonacion");

                    b.Property<DateTime>("dtFechaPermuta")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaPermuta");

                    b.Property<DateTime?>("dtFechaUnion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaUnion");

                    b.Property<int?>("iFolioElectronico")
                        .HasColumnType("int")
                        .HasColumnName("iFolioElectronico");

                    b.Property<long>("iIdBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    b.Property<long>("iIdTipoDomninio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoDomninio");

                    b.Property<long>("iIdTipoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoInmueble");

                    b.Property<long>("iIdUsoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsoInmueble");

                    b.Property<string>("sAfavorDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAFavorDe");

                    b.Property<string>("sAvaluo1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAvaluo1");

                    b.Property<string>("sAvaluo2")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAvaluo2");

                    b.Property<string>("sClaveCatastral")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sClaveCatastral");

                    b.Property<string>("sDecretoPublicacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sDecretoPublicacion");

                    b.Property<string>("sDecretoPublicacionDonacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sDecretoPublicacionDonacion");

                    b.Property<string>("sDestinoBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDestinoBien");

                    b.Property<string>("sDonatario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sDonatario");

                    b.Property<string>("sEscrituraTitulo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sEscrituraTitulo");

                    b.Property<string>("sExpedienteUnion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sExpedienteUnion");

                    b.Property<string>("sInmueblePermutado")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sInmueblePermutado");

                    b.Property<string>("sJustificacion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sJustificacion");

                    b.Property<string>("sObservacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacion");

                    b.Property<string>("sReferencaPoliza")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sReferencaPoliza");

                    b.Property<string>("sRepositario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sRepositario");

                    b.HasKey("iIdBajaInmueble")
                        .HasName("PK__BajasInm__CD4F675026AD28D3");

                    b.HasIndex("iIdBien");

                    b.HasIndex("iIdTipoDomninio");

                    b.HasIndex("iIdTipoInmueble");

                    b.HasIndex("iIdUsoInmueble");

                    b.ToTable("BajasInmuebles", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", b =>
                {
                    b.Property<long>("iIdBien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdBien"));

                    b.Property<bool?>("bDeprecia")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("bDeprecia")
                        .HasDefaultValueSql("((1))");

                    b.Property<double>("dPrecioDepreciado")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDepreciado");

                    b.Property<double>("dPrecioDesechable")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDesechable");

                    b.Property<double>("dPrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioUnitario");

                    b.Property<DateTime>("dtFechaAdquisicion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAdquisicion");

                    b.Property<DateTime?>("dtFechaAlta")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAlta");

                    b.Property<DateTime?>("dtFechaBaja")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaBaja");

                    b.Property<DateTime>("dtFechaInicioUso")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaInicioUso");

                    b.Property<int>("iAniosVida")
                        .HasColumnType("int")
                        .HasColumnName("iAniosVida");

                    b.Property<long>("iIdBms")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBMS");

                    b.Property<long?>("iIdDatoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("idDatoInmueble");

                    b.Property<long>("iIdEstadoFisico")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoFisico");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long>("iIdMunicipio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<long>("iIdTipoAdquisicion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAdquisicion");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUbicacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUbicacion");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sCaracteristicas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCaracteristicas");

                    b.Property<string>("sCuentaActivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActivo");

                    b.Property<string>("sCuentaActualizacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActualizacion");

                    b.Property<string>("sCuentaPorPagar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCuentaPorPagar");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sFolioAnterior")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sFolioAnterior");

                    b.Property<string>("sFolioBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sMotivoBaja")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sMotivoBaja");

                    b.Property<string>("sNoSeries")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sNoSeries");

                    b.Property<string>("sObservacionBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionBien");

                    b.Property<string>("sObservacionResponsable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionResponsable");

                    b.Property<string>("sOrdenCompra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sOrdenCompra");

                    b.Property<string>("sPartidaEspecifica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sPartidaEspecifica");

                    b.Property<string>("sReferenciaConac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sReferenciaCONAC");

                    b.Property<string>("sRequisicion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sRequisicion");

                    b.Property<string>("sResguardantes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sResguardantes");

                    b.Property<string>("sSustituyeBv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sSustituyeBV");

                    b.HasKey("iIdBien")
                        .HasName("PK__Bienes__23B12AEDCBFD51DE");

                    b.HasIndex("iIdBms");

                    b.HasIndex("iIdDatoInmueble");

                    b.HasIndex("iIdEstadoFisico");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdMunicipio");

                    b.HasIndex("iIdPeriodo");

                    b.HasIndex("iIdSubfamilia");

                    b.HasIndex("iIdTipoAdquisicion");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUbicacion");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("Bienes", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoGeneral.EntDatoGeneral", b =>
                {
                    b.Property<long>("iIdDatoGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoGeneral");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDatoGeneral"));

                    b.Property<long?>("iIdClaseVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdClaseVehicular");

                    b.Property<long?>("iIdClaveVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdClaveVehicular");

                    b.Property<long?>("iIdColor")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdColor");

                    b.Property<long?>("iIdCombustibleVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCombustibleVehicular");

                    b.Property<long?>("iIdLineaVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdLineaVehicular");

                    b.Property<long?>("iIdMarca")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMarca");

                    b.Property<long?>("iIdTipoVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoVehicular");

                    b.Property<long?>("iIdVersionVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdVersionVehicular");

                    b.HasKey("iIdDatoGeneral")
                        .HasName("PK__DatosGen__D07A5446D92CD2B9");

                    b.HasIndex("iIdClaseVehicular");

                    b.HasIndex("iIdClaveVehicular");

                    b.HasIndex("iIdColor");

                    b.HasIndex("iIdCombustibleVehicular");

                    b.HasIndex("iIdLineaVehicular");

                    b.HasIndex("iIdMarca");

                    b.HasIndex("iIdTipoVehicular");

                    b.HasIndex("iIdVersionVehicular");

                    b.ToTable("DatosGenerales", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", b =>
                {
                    b.Property<long>("iIdDatoInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoInmueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDatoInmueble"));

                    b.Property<DateTime>("dtFechaAltaSistema")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAltaSistema");

                    b.Property<long>("iIdDatoRegistral")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoRegistral");

                    b.Property<long>("iIdEstadoGeneral")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoGeneral");

                    b.Property<long>("iIdTipoAfectacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAfectacion");

                    b.Property<long>("iIdTipoDomninio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoDomninio");

                    b.Property<long>("iIdTipoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoInmueble");

                    b.Property<long>("iIdUsoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsoInmueble");

                    b.Property<string>("sAfectante")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("sAfectante");

                    b.Property<string>("sNomenclatura")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sNomenclatura");

                    b.Property<string>("sPublicacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sPublicacion");

                    b.HasKey("iIdDatoInmueble")
                        .HasName("PK__DatosInm__6775C0745F38E0DB");

                    b.HasIndex("iIdDatoRegistral");

                    b.HasIndex("iIdEstadoGeneral");

                    b.HasIndex("iIdTipoAfectacion");

                    b.HasIndex("iIdTipoDomninio");

                    b.HasIndex("iIdTipoInmueble");

                    b.HasIndex("iIdUsoInmueble");

                    b.ToTable("DatosInmuebles", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoRegistral.EntDatoRegistral", b =>
                {
                    b.Property<long>("iIdDatoRegistral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoRegistral");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDatoRegistral"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<double>("dSuperficie")
                        .HasColumnType("float")
                        .HasColumnName("dSuperficie");

                    b.Property<double>("dSuperficieContruccion")
                        .HasColumnType("float")
                        .HasColumnName("dSuperficieContruccion");

                    b.Property<double>("dValorConstruccion")
                        .HasColumnType("float")
                        .HasColumnName("dValorConstruccion");

                    b.Property<double>("dValorInicial")
                        .HasColumnType("float")
                        .HasColumnName("dValorInicial");

                    b.Property<double>("dValorTerreno")
                        .HasColumnType("float")
                        .HasColumnName("dValorTerreno");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("iFolioCatastro")
                        .HasColumnType("int")
                        .HasColumnName("iFolioCatastro");

                    b.Property<int>("iFolioElectronico")
                        .HasColumnType("int")
                        .HasColumnName("iFolioElectronico");

                    b.Property<long>("iIdOrigenValor")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdOrigenValor");

                    b.Property<decimal?>("nCodigoPostal")
                        .HasColumnType("numeric(10, 0)")
                        .HasColumnName("nCodigoPostal");

                    b.Property<string>("sAsentamiento")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAsentamiento");

                    b.Property<string>("sCalle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("sCalle");

                    b.Property<string>("sCruzamimiento1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCruzamimiento1");

                    b.Property<string>("sCruzamimiento2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCruzamimiento2");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.Property<string>("sNumeroExterior")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNumeroExterior");

                    b.Property<string>("sNumeroInterior")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sNumeroInterior");

                    b.Property<string>("sPropietario")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sPropietario");

                    b.Property<string>("sTablaje")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sTablaje");

                    b.HasKey("iIdDatoRegistral")
                        .HasName("PK__DatosReg__EFB05DA4A077515B");

                    b.HasIndex("iIdOrigenValor");

                    b.ToTable("DatosRegistrales", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoVehicular.EntDatoVehicular", b =>
                {
                    b.Property<long>("iIdDatoVehicular")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoVehicular");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDatoVehicular"));

                    b.Property<int?>("iAnioEmision")
                        .HasColumnType("int")
                        .HasColumnName("iAnioEmision");

                    b.Property<int?>("iAnioModelo")
                        .HasColumnType("int")
                        .HasColumnName("iAnioModelo");

                    b.Property<int?>("iNumeroMotor")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroMotor");

                    b.Property<decimal?>("nNumeroEconomico")
                        .HasColumnType("numeric(30, 0)")
                        .HasColumnName("nNumeroEconomico");

                    b.Property<string>("sNumeroPlaca")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sNumeroPlaca");

                    b.HasKey("iIdDatoVehicular")
                        .HasName("PK__DatosVeh__6F810684C3314EC0");

                    b.ToTable("DatosVehiculares", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Depreciacion.EntDepreciacion", b =>
                {
                    b.Property<long>("iIdDepreciacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDepreciacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDepreciacion"));

                    b.Property<decimal>("dDepreciacionFiscal")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("dDepreciacionFiscal");

                    b.Property<decimal>("dDepreciaionAcumulada")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("dDepreciaionAcumulada");

                    b.Property<decimal>("dTasa")
                        .HasColumnType("decimal(9, 6)")
                        .HasColumnName("dTasa");

                    b.Property<double>("dValorLibros")
                        .HasColumnType("float")
                        .HasColumnName("dValorLibros");

                    b.Property<DateTime>("dtFecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("dtFecha")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    b.HasKey("iIdDepreciacion")
                        .HasName("PK__Deprecia__474B8FF9EB640343");

                    b.ToTable("Depreciaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Desincorporacion.EntDetalleDesincorporacion", b =>
                {
                    b.Property<long>("iIdDetalleDesincorporacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDesincorporacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleDesincorporacion"));

                    b.Property<DateTime>("dtFechaPublicacion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaPublicacion");

                    b.Property<long>("iIdEmpleado")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sDescripcionDesincorporacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcionDesincorporacion");

                    b.Property<string>("sFolioBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sNumeroPublicacion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNumeroPublicacion");

                    b.Property<string>("sObservaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdDetalleDesincorporacion")
                        .HasName("PK__Detalles__AA4AE52E6444EBCF");

                    b.HasIndex("iIdEmpleado");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("DetallesDesincorporaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestinoFinal", b =>
                {
                    b.Property<long>("iIdDetalleDestinoFinal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDestinoFinal");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleDestinoFinal"));

                    b.Property<long>("iIdAfectacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAfectacion");

                    b.Property<long?>("iIdDetalleDestruccion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDestruccion");

                    b.Property<long?>("iIdDetalleEnagenacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleEnagenacion");

                    b.Property<long>("iIdEmpleado")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sFolioBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sObservaciones")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdDetalleDestinoFinal")
                        .HasName("PK__Detalles__9A03571F466E843F");

                    b.HasIndex("iIdAfectacion");

                    b.HasIndex("iIdDetalleDestruccion");

                    b.HasIndex("iIdDetalleEnagenacion");

                    b.HasIndex("iIdEmpleado");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("DetallesDestinoFinales", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestruccion", b =>
                {
                    b.Property<long>("iIdDetalleDestruccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDestruccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleDestruccion"));

                    b.Property<DateTime>("dtFecha")
                        .HasColumnType("date")
                        .HasColumnName("dtFecha");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sFolio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sFolio");

                    b.HasKey("iIdDetalleDestruccion")
                        .HasName("PK__Detalles__60F6C0F7F3E8F9B3");

                    b.ToTable("DetallesDestrucciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleEnagenacion", b =>
                {
                    b.Property<long>("iIdDetalleEnagenacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleEnagenacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleEnagenacion"));

                    b.Property<double>("dImporte")
                        .HasColumnType("float")
                        .HasColumnName("dImporte");

                    b.Property<double>("dImporteAvaluo")
                        .HasColumnType("float")
                        .HasColumnName("dImporteAvaluo");

                    b.Property<DateTime>("dtFecha")
                        .HasColumnType("date")
                        .HasColumnName("dtFecha");

                    b.Property<string>("sAvaluo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sAvaluo");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sFolio")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sFolio");

                    b.HasKey("iIdDetalleEnagenacion")
                        .HasName("PK__Detalles__04C2C2CCB1064020");

                    b.ToTable("DetallesEnagenaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", b =>
                {
                    b.Property<long>("iIdEtapa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdEtapa"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdEtapa")
                        .HasName("PK__Etapas__CB53046F1A50ABC1");

                    b.ToTable("Etapas", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.EtapaTramite.EntEtapaTramite", b =>
                {
                    b.Property<long>("iIdEtapaTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapaTramite");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdEtapaTramite"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdEtapaDestino")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapaDestino");

                    b.Property<long>("iIdEtapaOrigen")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapaOrigen");

                    b.Property<long>("iIdTipoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoTramite");

                    b.HasKey("iIdEtapaTramite")
                        .HasName("PK__EtapasTr__925533C9B5793230");

                    b.HasIndex("iIdEtapaDestino");

                    b.HasIndex("iIdEtapaOrigen");

                    b.HasIndex("iIdTipoTramite");

                    b.ToTable("EtapasTramites", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Factura.EntFactura", b =>
                {
                    b.Property<long>("iIdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFactura");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdFactura"));

                    b.Property<DateTime>("dtFecha")
                        .HasColumnType("date")
                        .HasColumnName("dtFecha");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("iGarantiaDias")
                        .HasColumnType("int")
                        .HasColumnName("iGarantiaDias");

                    b.Property<long?>("iIdDatoVehicular")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoVehicular");

                    b.Property<string>("sFolioFactura")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sFolioFactura");

                    b.HasKey("iIdFactura")
                        .HasName("PK__Facturas__40F839C2353EA414");

                    b.HasIndex("iIdDatoVehicular");

                    b.ToTable("Facturas", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Historial.EntHistorial", b =>
                {
                    b.Property<long>("iIdHistorial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdHistorial");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdHistorial"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    b.Property<long>("iIdModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdModulo");

                    b.Property<long>("iIdSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    b.Property<long>("iIdSubModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    b.HasKey("iIdHistorial")
                        .HasName("PK__Historia__6D1A674A5F7F9FBC");

                    b.HasIndex("iIdBien");

                    b.HasIndex("iIdModulo");

                    b.HasIndex("iIdSolicitud");

                    b.HasIndex("iIdSubModulo");

                    b.ToTable("Historiales", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Licitacion.EntLicitacion", b =>
                {
                    b.Property<long>("iIdLicitacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdLicitacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdLicitacion"));

                    b.Property<DateTime?>("dtFecha")
                        .HasColumnType("date")
                        .HasColumnName("dtFecha");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("iNumeroLicitacion")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroLicitacion");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdLicitacion")
                        .HasName("PK__Licitaci__A1CF2C2E9CA57796");

                    b.ToTable("Licitaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Modificacion.EntDetalleModificacion", b =>
                {
                    b.Property<long>("iIdDetalleModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleModificacion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleModificacion"));

                    b.Property<double>("dPrecioDepreciado")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDepreciado");

                    b.Property<double>("dPrecioDesechable")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioDesechable");

                    b.Property<double>("dPrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("dPrecioUnitario");

                    b.Property<DateTime>("dtFechaAdquisicion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAdquisicion");

                    b.Property<DateTime>("dtFechaInicioUso")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaInicioUso");

                    b.Property<int>("iAniosVida")
                        .HasColumnType("int")
                        .HasColumnName("iAniosVida");

                    b.Property<long>("iIdBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBien");

                    b.Property<long>("iIdBms")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdBMS");

                    b.Property<long?>("iIdDatoInmueble")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDatoInmueble");

                    b.Property<long>("iIdEstadoFisico")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEstadoFisico");

                    b.Property<long>("iIdEtapa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    b.Property<long?>("iIdFactura")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFactura");

                    b.Property<long>("iIdFamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdFamilia");

                    b.Property<long?>("iIdLicitacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdLicitacion");

                    b.Property<long>("iIdMunicipio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    b.Property<long>("iIdSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    b.Property<long>("iIdSubfamilia")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubfamilia");

                    b.Property<long>("iIdTipoAdquisicion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoAdquisicion");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long>("iIdUbicacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUbicacion");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<int>("iNumeroBienes")
                        .HasColumnType("int")
                        .HasColumnName("iNumeroBienes");

                    b.Property<string>("sCaracteristicas")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCaracteristicas");

                    b.Property<string>("sCuentaActivo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActivo");

                    b.Property<string>("sCuentaActualizacion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sCuentaActualizacion");

                    b.Property<string>("sCuentaPorPagar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sCuentaPorPagar");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sFolioAnterior")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sFolioAnterior");

                    b.Property<string>("sFolioBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sNoSeries")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sNoSeries");

                    b.Property<string>("sObservacionBien")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionBien");

                    b.Property<string>("sObservacionResponsable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservacionResponsable");

                    b.Property<string>("sOrdenCompra")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sOrdenCompra");

                    b.Property<string>("sPartidaEspecifica")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sPartidaEspecifica");

                    b.Property<string>("sReferenciaConac")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sReferenciaCONAC");

                    b.Property<string>("sRequisicion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sRequisicion");

                    b.Property<string>("sResguardantes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sResguardantes");

                    b.Property<string>("sSustituyeBv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sSustituyeBV");

                    b.HasKey("iIdDetalleModificacion")
                        .HasName("PK__Detalles__AD199F0024DAE5C0");

                    b.HasIndex("iIdBien");

                    b.HasIndex("iIdBms");

                    b.HasIndex("iIdDatoInmueble");

                    b.HasIndex("iIdEstadoFisico");

                    b.HasIndex("iIdEtapa");

                    b.HasIndex("iIdFamilia");

                    b.HasIndex("iIdMunicipio");

                    b.HasIndex("iIdSolicitud");

                    b.HasIndex("iIdSubfamilia");

                    b.HasIndex("iIdTipoAdquisicion");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUbicacion");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("DetallesModificaciones", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.MotivoTramite.EntMotivoTramite", b =>
                {
                    b.Property<long>("iIdMotivoTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMotivoTramite");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdMotivoTramite"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdTipoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoTramite");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdMotivoTramite")
                        .HasName("PK__MotivosT__2F10899C4E02B046");

                    b.HasIndex("iIdTipoTramite");

                    b.ToTable("MotivosTramites", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Movimiento.EntDetalleMovimiento", b =>
                {
                    b.Property<long>("iIdDetalleMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleMovimiento"));

                    b.Property<long>("iIdMunicipio")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMunicipio");

                    b.Property<long?>("iIdNuevaUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdNuevaUnidadAdministrativa");

                    b.Property<long>("iIdTipoBien")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBien");

                    b.Property<long?>("iIdUbicacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUbicacion");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sFolioBien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sFolioBien");

                    b.Property<string>("sResponsable")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sResponsable");

                    b.HasKey("iIdDetalleMovimiento")
                        .HasName("PK__Detalles__A0550FB39EF6C5C0");

                    b.HasIndex("iIdMunicipio");

                    b.HasIndex("iIdNuevaUnidadAdministrativa");

                    b.HasIndex("iIdTipoBien");

                    b.HasIndex("iIdUbicacion");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("DetallesMovimientos", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Seguimiento.EntSeguimiento", b =>
                {
                    b.Property<long>("iIdSeguimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSeguimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdSeguimiento"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaHora")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdDetalleSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleSolicitud");

                    b.Property<long>("iIdEtapa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    b.Property<long>("iIdModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdModulo");

                    b.Property<long>("iIdSubModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    b.Property<long>("iIdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuario");

                    b.HasKey("iIdSeguimiento")
                        .HasName("PK__Seguimie__4C9AC15206F9509C");

                    b.HasIndex("iIdDetalleSolicitud");

                    b.HasIndex("iIdEtapa");

                    b.HasIndex("iIdModulo");

                    b.HasIndex("iIdSubModulo");

                    b.HasIndex("iIdUsuario");

                    b.ToTable("Seguimientos", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntDetalleSolicitud", b =>
                {
                    b.Property<long>("iIdDetalleSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleSolicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdDetalleSolicitud"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("iIdDetalleAlta")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleAlta");

                    b.Property<long?>("iIdDetalleBaja")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleBaja");

                    b.Property<long?>("iIdDetalleDesincorporacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDesincorporacion");

                    b.Property<long?>("iIdDetalleDestinoFinal")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleDestinoFinal");

                    b.Property<long?>("iIdDetalleModificacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleModificacion");

                    b.Property<long?>("iIdDetalleMovimiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdDetalleMovimiento");

                    b.Property<long>("iIdEtapa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    b.Property<long>("iIdSolicitud")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    b.HasKey("iIdDetalleSolicitud")
                        .HasName("PK__Detalles__27101719C0E583E6");

                    b.HasIndex("iIdDetalleAlta");

                    b.HasIndex("iIdDetalleBaja");

                    b.HasIndex("iIdDetalleDesincorporacion");

                    b.HasIndex("iIdDetalleDestinoFinal");

                    b.HasIndex("iIdDetalleModificacion");

                    b.HasIndex("iIdDetalleMovimiento");

                    b.HasIndex("iIdEtapa");

                    b.HasIndex("iIdSolicitud");

                    b.ToTable("DetallesSolicitudes", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", b =>
                {
                    b.Property<long>("iIdSolicitud")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSolicitud");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdSolicitud"));

                    b.Property<DateTime>("dtFechaAfectacion")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaAfectacion");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdAfectacion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdAfectacion");

                    b.Property<long>("iIdEmpleado")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    b.Property<long>("iIdEtapa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEtapa");

                    b.Property<long>("iIdMotivoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdMotivoTramite");

                    b.Property<long>("iIdPeriodo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPeriodo");

                    b.Property<long>("iIdTipoTramite")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoTramite");

                    b.Property<long>("iIdUnidadAdministrativa")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUnidadAdministrativa");

                    b.Property<string>("sDocumentoReferencia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDocumentoReferencia");

                    b.Property<string>("sObservaciones")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sObservaciones");

                    b.HasKey("iIdSolicitud")
                        .HasName("PK__Solicitu__B36AE9393E87D0CD");

                    b.HasIndex("iIdAfectacion");

                    b.HasIndex("iIdEmpleado");

                    b.HasIndex("iIdEtapa");

                    b.HasIndex("iIdMotivoTramite");

                    b.HasIndex("iIdPeriodo");

                    b.HasIndex("iIdTipoTramite");

                    b.HasIndex("iIdUnidadAdministrativa");

                    b.ToTable("Solicitudes", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoBienImueble.EntTipoBienInmueble", b =>
                {
                    b.Property<long>("iIdTipoBienInmueble")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoBienInmueble");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoBienInmueble"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("iNivel")
                        .HasColumnType("int")
                        .HasColumnName("iNivel");

                    b.Property<string>("sClave")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sClave");

                    b.Property<string>("sClaveCompleta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("sClaveCompleta");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoBienInmueble")
                        .HasName("PK__TiposBie__87E3D89DA277842F");

                    b.ToTable("TiposBienesInmuebles", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoDominio.EntTipoDominio", b =>
                {
                    b.Property<long>("iIdTipoDominio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoDominio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoDominio"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoDominio")
                        .HasName("PK__TiposDom__C78CD359EE573C1B");

                    b.ToTable("TiposDominios", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", b =>
                {
                    b.Property<long>("iIdTipoTramite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdTipoTramite");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdTipoTramite"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdSubModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdTipoTramite")
                        .HasName("PK__TiposTra__813A81752F550D06");

                    b.HasIndex("iIdSubModulo");

                    b.ToTable("TiposTramites", "Patrimonio");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", b =>
                {
                    b.Property<long>("iIdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdEmpleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdEmpleado"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaIngreso")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaIngreso");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdNombramiento")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdNombramiento");

                    b.Property<long>("iIdPersona")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPersona");

                    b.Property<long>("iIdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuario");

                    b.HasKey("iIdEmpleado")
                        .HasName("PK__Empleado__AD520645D6391172");

                    b.HasIndex("iIdNombramiento");

                    b.HasIndex("iIdPersona");

                    b.HasIndex("iIdUsuario");

                    b.ToTable("Empleados", "Seguridad");

                    b.HasData(
                        new
                        {
                            iIdEmpleado = 1L,
                            bActivo = true,
                            dtFechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dtFechaIngreso = new DateTime(2024, 12, 9, 18, 44, 13, 999, DateTimeKind.Local).AddTicks(7704),
                            dtFechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            iIdNombramiento = 6L,
                            iIdPersona = 1L,
                            iIdUsuario = 1L
                        });
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", b =>
                {
                    b.Property<long>("iIdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdPermiso"));

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdPermiso")
                        .HasName("PK__Permisos__6E83624B599432E9");

                    b.ToTable("Permisos", "Seguridad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Persona.EntPersona", b =>
                {
                    b.Property<long>("iIdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPersona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdPersona"));

                    b.Property<bool>("bHombre")
                        .HasColumnType("bit")
                        .HasColumnName("bHombre");

                    b.Property<DateTime>("dtFechaNacimiento")
                        .HasColumnType("date")
                        .HasColumnName("dtFechaNacimiento");

                    b.Property<long>("iIdNacionalidad")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdNacionalidad");

                    b.Property<string>("sNombres")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("sNombres");

                    b.Property<string>("sPrimerNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sPrimerNombre");

                    b.Property<string>("sRfc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("sRFC");

                    b.Property<string>("sSegundoNombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sSegundoNombre");

                    b.HasKey("iIdPersona")
                        .HasName("PK__Personas__CB475B379A67DA15");

                    b.HasIndex("iIdNacionalidad");

                    b.ToTable("Personas", "Seguridad");

                    b.HasData(
                        new
                        {
                            iIdPersona = 1L,
                            bHombre = true,
                            dtFechaNacimiento = new DateTime(2024, 12, 9, 18, 44, 13, 998, DateTimeKind.Local).AddTicks(2843),
                            iIdNacionalidad = 1L,
                            sNombres = "Administrador",
                            sPrimerNombre = "",
                            sRfc = "RRRRRRRRRR",
                            sSegundoNombre = ""
                        });
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Rol.EntRol", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombre");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sNombreNormalizado");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sDescripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.HasKey("Id")
                        .HasName("PK__Roles__87A2FA5D8A6AE9D5");

                    b.ToTable("Roles", "Seguridad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.RolPermiso.EntRolPermiso", b =>
                {
                    b.Property<long>("iIdRolPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdRolPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdRolPermiso"));

                    b.Property<long>("iIdPermiso")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    b.Property<long>("iIdRol")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdRol");

                    b.HasKey("iIdRolPermiso")
                        .HasName("PK__RolesPer__D69F977FC4ADCBF8");

                    b.HasIndex("iIdPermiso");

                    b.HasIndex("iIdRol");

                    b.ToTable("RolesPermisos", "Seguridad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sEmail");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit")
                        .HasColumnName("bEmailVerificado");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sEmailNormalizado");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sUsuarioNormalizado");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sContraseniaHash");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sNumero");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sUsuario");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Usuarios__A271047F24F29A25");

                    b.ToTable("Usuarios", "Seguridad");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2935de34-8ec6-4388-9596-c5379439b33c",
                            Email = "administrador@sicba.com",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMINISTRADOR@SICBA.COM",
                            NormalizedUserName = "ADMINISTRADOR",
                            PasswordHash = "AQAAAAEAACcQAAAAEJM8u9v79l1yXx5xoHVfu13YzB0FEdvjSI+fLW5Q6VAkz08z+4SyWvwPslmEjoF8RQ==",
                            PhoneNumber = "99999999",
                            PhoneNumberConfirmed = true,
                            TwoFactorEnabled = false,
                            UserName = "administrador",
                            dtFechaCreacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            dtFechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.UsuarioPermiso.EntUsuarioPermiso", b =>
                {
                    b.Property<long>("iIdUsuarioPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuarioPermiso");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdUsuarioPermiso"));

                    b.Property<long>("iIdPermiso")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    b.Property<long>("iIdUsuario")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuario");

                    b.HasKey("iIdUsuarioPermiso")
                        .HasName("PK__Usuarios__883428D11651BC3E");

                    b.HasIndex("iIdPermiso");

                    b.HasIndex("iIdUsuario");

                    b.ToTable("UsuariosPermisos", "Seguridad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.UsuarioRol.EntUsuarioRol", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdRol");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdUsuario");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UsuariosRoles", "Seguridad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Catalogo.EntCatalogo", b =>
                {
                    b.Property<long>("iIdCatalogo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCatalogo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdCatalogo"));

                    b.Property<bool?>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("iIdModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdModulo");

                    b.Property<long>("iIdPermiso")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdCatalogo")
                        .HasName("PK__Catalogo__22F71DB45F46ABBC");

                    b.HasIndex("iIdModulo");

                    b.HasIndex("iIdPermiso");

                    b.ToTable("Catalogos", "Sistema");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.ColumnaTabla.EntColumnasTabla", b =>
                {
                    b.Property<long>("iIdColumnaTabla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdColumnaTabla");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdColumnaTabla"));

                    b.Property<bool>("bActivo")
                        .HasColumnType("bit")
                        .HasColumnName("bActivo");

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("iIdCatalogo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdCatalogo");

                    b.Property<long?>("iIdSubModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    b.Property<int?>("iTamanio")
                        .HasColumnType("int")
                        .HasColumnName("iTamanio");

                    b.Property<string>("sClave")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sClave");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("sNombre");

                    b.Property<string>("sTipoDato")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sTipoDato");

                    b.HasKey("iIdColumnaTabla")
                        .HasName("PK__Columnas__2C76C9E53F8A3CC5");

                    b.HasIndex("iIdCatalogo");

                    b.HasIndex("iIdSubModulo");

                    b.ToTable("ColumnasTablas", "Sistema");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Modulo.EntModulo", b =>
                {
                    b.Property<long>("iIdModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdModulo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdModulo"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdPermiso")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    b.Property<string>("sAbreviacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sAbreviacion");

                    b.Property<string>("sDescripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sDescripcion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdModulo")
                        .HasName("PK__Modulos__091CACC3E4633978");

                    b.HasIndex("iIdPermiso");

                    b.ToTable("Modulos", "Sistema");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Seccion.EntSeccion", b =>
                {
                    b.Property<long>("iIdSeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSeccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdSeccion"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdSeccion")
                        .HasName("PK__Seccione__D29229B708366729");

                    b.ToTable("Secciones", "Sistema");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", b =>
                {
                    b.Property<long>("iIdSubModulo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSubModulo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("iIdSubModulo"));

                    b.Property<DateTime>("dtFechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaCreacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("dtFechaModificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("dtFechaModificacion")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("iIdModulo")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdModulo");

                    b.Property<long>("iIdPermiso")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdPermiso");

                    b.Property<long>("iIdSeccion")
                        .HasColumnType("bigint")
                        .HasColumnName("iIdSeccion");

                    b.Property<string>("sAbreviacion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("sAbreviacion");

                    b.Property<string>("sNombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("sNombre");

                    b.HasKey("iIdSubModulo")
                        .HasName("PK__SubModul__934F29C8F8E314D0");

                    b.HasIndex("iIdModulo");

                    b.HasIndex("iIdPermiso");

                    b.HasIndex("iIdSeccion");

                    b.ToTable("SubModulos", "Sistema");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntBienAlmacen", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.EntAlmacen", "Almacen")
                        .WithMany("Bienes")
                        .HasForeignKey("iIdAlmacen")
                        .IsRequired()
                        .HasConstraintName("FK_AlmacenBienes_iIdAlmacen");

                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("BienesAlmacen")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_AlmacenBienes_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("BienesAlmacen")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_AlmacenBienes_iIdSubfamilia");

                    b.Navigation("Almacen");

                    b.Navigation("Familia");

                    b.Navigation("Subfamilia");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMovimiento", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.EntAlmacen", "Almacen")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdAlmacen")
                        .IsRequired()
                        .HasConstraintName("FK_Movimientos_iIdAlmacen");

                    b.HasOne("ControlBienes.Entities.Catalogos.EntConceptoMovimiento", "ConceptoMovimiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdConceptoMovimiento")
                        .HasConstraintName("FK_Movimientos_iIdConceptoMovimiento");

                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdFamilia")
                        .HasConstraintName("FK_Movimientos_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.Almacen.EntFuenteFinanciamiento", "FuenteFinanciamiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdFuenteFinanciamiento")
                        .HasConstraintName("FK_Movimientos_iIdFuenteFinanciamiento");

                    b.HasOne("ControlBienes.Entities.Almacen.EntMetodoAdquisicion", "MetodoAdquisicion")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdMetodoAdquisicion")
                        .IsRequired()
                        .HasConstraintName("FK_Movimientos_iIdMetodoAdquisicion");

                    b.HasOne("ControlBienes.Entities.Almacen.EntProgramasOperativo", "IIdProgramaOperativoNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdProgramaOperativo")
                        .HasConstraintName("FK_Movimientos_iIdProgramaOperativo");

                    b.HasOne("ControlBienes.Entities.Almacen.EntProveedor", "Proveedor")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdProveedor")
                        .HasConstraintName("FK_Movimientos_iIdProveedor");

                    b.HasOne("ControlBienes.Entities.Almacen.EntTipoMovimiento", "TipoMovimiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("iIdTipoMovimiento")
                        .IsRequired()
                        .HasConstraintName("FK_Movimientos_iIdTipoMovimiento");

                    b.Navigation("Almacen");

                    b.Navigation("ConceptoMovimiento");

                    b.Navigation("Familia");

                    b.Navigation("FuenteFinanciamiento");

                    b.Navigation("IIdProgramaOperativoNavigation");

                    b.Navigation("MetodoAdquisicion");

                    b.Navigation("Proveedor");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMovimientoBien", b =>
                {
                    b.HasOne("ControlBienes.Entities.Almacen.EntBienAlmacen", "Bien")
                        .WithMany("MovimientosBienes")
                        .HasForeignKey("iIdBien")
                        .HasConstraintName("FK_MovimientosBienes_iIdBien");

                    b.HasOne("ControlBienes.Entities.General.BMS.EntBms", "Bms")
                        .WithMany("MovimientosBienes")
                        .HasForeignKey("iIdBms")
                        .IsRequired()
                        .HasConstraintName("FK_MovimientosBienes_iIdBMS");

                    b.HasOne("ControlBienes.Entities.Almacen.EntMovimiento", "Movimiento")
                        .WithMany("MovimientosBienes")
                        .HasForeignKey("iIdMovimiento")
                        .IsRequired()
                        .HasConstraintName("FK_MovimientosBienes_iIdMovimiento");

                    b.Navigation("Bien");

                    b.Navigation("Bms");

                    b.Navigation("Movimiento");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntZona", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.EntAlmacen", "Almacen")
                        .WithMany("Zonas")
                        .HasForeignKey("iIdAlmacen")
                        .IsRequired()
                        .HasConstraintName("FK_Zonas_iIdAlmacen");

                    b.Navigation("Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CaracteristicaBien.EntCaracteristicaBien", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("CaracteristicasBienes")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_CaracteristicasBienes_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("CaracteristicasBienes")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_CaracteristicasBienes_iIdSubfamilia");

                    b.Navigation("Familia");

                    b.Navigation("Subfamilia");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajo", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Municipio.EntMunicipio", "Municipio")
                        .WithMany("CentrosTrabajos")
                        .HasForeignKey("iIdMunicipio")
                        .IsRequired()
                        .HasConstraintName("FK_CentrosTrabajo_iIdMunicipio");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("CentrosTrabajos")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_CentrosTrabajo_iIdUnidadesAdministrativas");

                    b.Navigation("Municipio");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajoTurno", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajo", "CentroTrabajo")
                        .WithMany("CentroTrabajoTurnos")
                        .HasForeignKey("iIdCentroTrabajo")
                        .IsRequired()
                        .HasConstraintName("FK_CentroTrabajoTurnos_iIdCentrosTrabajo");

                    b.HasOne("ControlBienes.Entities.Catalogos.Turno.EntTurno", "Turno")
                        .WithMany("CentroTrabajoTurnos")
                        .HasForeignKey("iIdTurno")
                        .IsRequired()
                        .HasConstraintName("FK_CentroTrabajoTurnos_iIdTurno");

                    b.Navigation("CentroTrabajo");

                    b.Navigation("Turno");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Documento.EntDocumento", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.MotivoTramite.EntMotivoTramite", "MotivoTramite")
                        .WithMany("Documentos")
                        .HasForeignKey("iIdMotivoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_Documentos_iIdMotivoTramite");

                    b.HasOne("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", "SubModulo")
                        .WithMany("Documentos")
                        .HasForeignKey("iIdSubModulo")
                        .IsRequired()
                        .HasConstraintName("FK_Documentos_iIdModulo");

                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", "TipoTramite")
                        .WithMany("Documentos")
                        .HasForeignKey("iIdTipoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_Documentos_iIdTipoTramite");

                    b.Navigation("MotivoTramite");

                    b.Navigation("SubModulo");

                    b.Navigation("TipoTramite");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntAlmacen", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Cuenta.EntCuenta", "Cuenta")
                        .WithMany("Almacenes")
                        .HasForeignKey("iIdCuenta")
                        .IsRequired()
                        .HasConstraintName("FK_Almacenes_iIdCuenta");

                    b.HasOne("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", "Empleado")
                        .WithMany("Almacenes")
                        .HasForeignKey("iIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Almacenes_iIdEmpleado");

                    b.HasOne("ControlBienes.Entities.Almacen.EntMetodoCosteo", "MetodoCosteo")
                        .WithMany("Almacenes")
                        .HasForeignKey("iIdMetodoCosteo")
                        .IsRequired()
                        .HasConstraintName("FK_Almacenes_iIdMetodoCosteo");

                    b.HasOne("ControlBienes.Entities.General.Periodo.EntPeriodo", "Periodo")
                        .WithMany("Almacenes")
                        .HasForeignKey("iIdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_Almacenes_iIdPeriodo");

                    b.Navigation("Cuenta");

                    b.Navigation("Empleado");

                    b.Navigation("MetodoCosteo");

                    b.Navigation("Periodo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntAnaquel", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.EntAlmacen", "Almacen")
                        .WithMany("Anaqueles")
                        .HasForeignKey("iIdAlmacen")
                        .IsRequired()
                        .HasConstraintName("FK_Anaqueles_iIdAlmacen");

                    b.Navigation("Almacen");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntConceptoMovimiento", b =>
                {
                    b.HasOne("ControlBienes.Entities.Almacen.EntTipoMovimiento", "TipoMovimiento")
                        .WithMany("ConceptosMovimientos")
                        .HasForeignKey("iIdTipoMovimiento")
                        .IsRequired()
                        .HasConstraintName("FK_ConceptosMovimientos_iIdTipoMovimiento");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Familia.EntFamilia", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("Familia")
                        .HasForeignKey("iIdTipoBien")
                        .HasConstraintName("FK_Familias_iIdTipoBien");

                    b.Navigation("TipoBien");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Resguardante.EntResguardante", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Periodo.EntPeriodo", "Periodo")
                        .WithMany("Resguardantes")
                        .HasForeignKey("iIdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_Resguardantes_iIdPeriodo");

                    b.HasOne("ControlBienes.Entities.Seguridad.Persona.EntPersona", "Persona")
                        .WithMany("Resguardantes")
                        .HasForeignKey("iIdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_Resguardantes_iIdPersona");

                    b.HasOne("ControlBienes.Entities.General.TipoResponsable.EntTipoResponsable", "TipoResponsable")
                        .WithMany("Resguardantes")
                        .HasForeignKey("iIdTipoResponsable")
                        .IsRequired()
                        .HasConstraintName("FK_Resguardantes_iIdTipoResponsable");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("Resguardantes")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_Resguardantes_UnidadesAdministrativas");

                    b.Navigation("Periodo");

                    b.Navigation("Persona");

                    b.Navigation("TipoResponsable");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("Subfamilia")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_Subfamilias_iIdFamilia");

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Titular.EntTitular", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajoTurno", "CentroTrabajoTurno")
                        .WithMany("Titulares")
                        .HasForeignKey("iIdCentroTrabajoTurno")
                        .IsRequired()
                        .HasConstraintName("FK_Titulares_iIdCentroTrabajoTurno");

                    b.Navigation("CentroTrabajoTurno");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.BMS.EntBms", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("Bms")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_BMS_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("Bms")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_BMS_iIdSubfamilia");

                    b.Navigation("Familia");

                    b.Navigation("Subfamilia");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Periodo.EntPeriodo", "Periodo")
                        .WithMany("UnidadesAdministrativas")
                        .HasForeignKey("iIdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_UnidadAdmistrativa_iIdPeriodo");

                    b.HasOne("ControlBienes.Entities.General.TipoNivel.EntTipoNivel", "TipoNivel")
                        .WithMany("UnidadesAdministrativas")
                        .HasForeignKey("iIdTipoNivel")
                        .IsRequired()
                        .HasConstraintName("FK_UnidadesAdministrativas_iIdTipoNivel");

                    b.Navigation("Periodo");

                    b.Navigation("TipoNivel");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Alta.EntDetalleAlta", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.BMS.EntBms", "Bms")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdBms")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdBMS");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", "DatosInmueble")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdDatoInmueble")
                        .HasConstraintName("FK_DetallesAltas_iIdDatosInmueblesAltas");

                    b.HasOne("ControlBienes.Entities.Catalogos.EstadoFisico.EntEstadoFisico", "EstadoFisico")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdEstadoFisico")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdEstadoFisico");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "Etapa")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdEtapa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdEtapa");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Factura.EntFactura", "Factura")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdFactura")
                        .HasConstraintName("FK_DetallesAltas_iIdFactura");

                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Licitacion.EntLicitacion", "Licitacion")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdLicitacion")
                        .HasConstraintName("FK_DetallesAltas_iIdLicitacion");

                    b.HasOne("ControlBienes.Entities.General.Municipio.EntMunicipio", "Municipio")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdMunicipio")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdMunicipio");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", "Solicitud")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdSolicitud");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdSubfamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoAdquisicion.EntTipoAdquisicion", "TipoAdquisicion")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdTipoAdquisicion")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdTipoAdquisicion");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", "Ubicacion")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdUbicacion")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdUbicacion");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("DetallesAlta")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesAltas_iIdUnidadAdministrativa");

                    b.Navigation("Bms");

                    b.Navigation("DatosInmueble");

                    b.Navigation("EstadoFisico");

                    b.Navigation("Etapa");

                    b.Navigation("Factura");

                    b.Navigation("Familia");

                    b.Navigation("Licitacion");

                    b.Navigation("Municipio");

                    b.Navigation("Solicitud");

                    b.Navigation("Subfamilia");

                    b.Navigation("TipoAdquisicion");

                    b.Navigation("TipoBien");

                    b.Navigation("Ubicacion");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntBaja", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", "Empleado")
                        .WithMany("Bajas")
                        .HasForeignKey("iIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Bajas_iIdEmpleado");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("Bajas")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_Bajas_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("Bajas")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_Bajas_iIdUnidadAdministrativa");

                    b.Navigation("Empleado");

                    b.Navigation("TipoBien");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntDetalleBaja", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Baja.EntBaja", "Baja")
                        .WithMany("DetallesBajas")
                        .HasForeignKey("iIdBaja")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesBajas_iIdBaja");

                    b.HasOne("ControlBienes.Entities.Patrimonio.BajaInmueble.EntBajaInmueble", "BajaInmueble")
                        .WithMany("DetallesBajas")
                        .HasForeignKey("iIdBajaInmueble")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesBajas_iIdBajaInmueble");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", "Solicitud")
                        .WithMany("DetallesBajas")
                        .HasForeignKey("iIdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesBajas_iIdSolicitud");

                    b.Navigation("Baja");

                    b.Navigation("BajaInmueble");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.BajaInmueble.EntBajaInmueble", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", "Bien")
                        .WithMany("BajasInmuebles")
                        .HasForeignKey("iIdBien")
                        .IsRequired()
                        .HasConstraintName("FK_BajasInmuebles_iIdBien");

                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoDominio.EntTipoDominio", "TiposDominio")
                        .WithMany("BajasInmuebles")
                        .HasForeignKey("iIdTipoDomninio")
                        .IsRequired()
                        .HasConstraintName("FK_BajasInmuebles_iIdTipoDomninio");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoInmueble.EntTipoInmueble", "TipoInmueble")
                        .WithMany("BajasInmuebles")
                        .HasForeignKey("iIdTipoInmueble")
                        .IsRequired()
                        .HasConstraintName("FK_BajasInmuebles_iIdTipoInmueble");

                    b.HasOne("ControlBienes.Entities.Catalogos.UsoInmueble.EntUsoInmueble", "UsoInmueble")
                        .WithMany("BajasInmuebles")
                        .HasForeignKey("iIdUsoInmueble")
                        .IsRequired()
                        .HasConstraintName("FK_BajasInmuebles_iIdUsoInmueble");

                    b.Navigation("Bien");

                    b.Navigation("TipoInmueble");

                    b.Navigation("TiposDominio");

                    b.Navigation("UsoInmueble");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.BMS.EntBms", "Bms")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdBms")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdBMS");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", "DatoInmueble")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdDatoInmueble")
                        .HasConstraintName("FK_Bienes_iIdDatoInmueble");

                    b.HasOne("ControlBienes.Entities.Catalogos.EstadoFisico.EntEstadoFisico", "EstadoFisico")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdEstadoFisico")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdEstadoFisico");

                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.General.Municipio.EntMunicipio", "Municipio")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdMunicipio")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdMunicipio");

                    b.HasOne("ControlBienes.Entities.General.Periodo.EntPeriodo", "Periodo")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdPeriodo");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdSubfamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoAdquisicion.EntTipoAdquisicion", "TipoAdquisicion")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdTipoAdquisicion")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdTipoAdquisicion");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", "Ubicacion")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdUbicacion")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdUbicacion");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("BienesPatrimonio")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_Bienes_iIdUnidadAdministrativa");

                    b.Navigation("Bms");

                    b.Navigation("DatoInmueble");

                    b.Navigation("EstadoFisico");

                    b.Navigation("Familia");

                    b.Navigation("Municipio");

                    b.Navigation("Periodo");

                    b.Navigation("Subfamilia");

                    b.Navigation("TipoAdquisicion");

                    b.Navigation("TipoBien");

                    b.Navigation("Ubicacion");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoGeneral.EntDatoGeneral", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.ClaseVehicular.EntClaseVehicular", "ClaseVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdClaseVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdClaseVehicular");

                    b.HasOne("ControlBienes.Entities.Catalogos.ClaveVehicular.EntClaveVehicular", "ClaveVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdClaveVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdClaveVehicular");

                    b.HasOne("ControlBienes.Entities.Catalogos.Color.EntColor", "Color")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdColor")
                        .HasConstraintName("FK_DatosGenerales_iIdColor");

                    b.HasOne("ControlBienes.Entities.Catalogos.CombustibleVehicular.EntCombustibleVehicular", "CombustibleVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdCombustibleVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdCombustibleVehicular");

                    b.HasOne("ControlBienes.Entities.Catalogos.LineaVehicular.EntLineaVehicular", "LineaVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdLineaVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdLineaVehicular");

                    b.HasOne("ControlBienes.Entities.Catalogos.Marca.EntMarca", "Marca")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdMarca")
                        .HasConstraintName("FK_DatosGenerales_iIdMarca");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoVehicular.EntTipoVehicular", "TipoVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdTipoVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdTipoVehicular");

                    b.HasOne("ControlBienes.Entities.Catalogos.VersionVehicular.EntVersionVehicular", "VersionVehicular")
                        .WithMany("DatosGenerales")
                        .HasForeignKey("iIdVersionVehicular")
                        .HasConstraintName("FK_DatosGenerales_iIdVersionVehicular");

                    b.Navigation("ClaseVehicular");

                    b.Navigation("ClaveVehicular");

                    b.Navigation("Color");

                    b.Navigation("CombustibleVehicular");

                    b.Navigation("LineaVehicular");

                    b.Navigation("Marca");

                    b.Navigation("TipoVehicular");

                    b.Navigation("VersionVehicular");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.DatoRegistral.EntDatoRegistral", "DatosRegistral")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdDatoRegistral")
                        .IsRequired()
                        .HasConstraintName("FK_iIdInformacionRegistral");

                    b.HasOne("ControlBienes.Entities.Catalogos.EstadoGeneral.EntEstadoGeneral", "EstadoGeneral")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdEstadoGeneral")
                        .IsRequired()
                        .HasConstraintName("FK_iIdEstadoGeneral");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoAfectacion.EntTipoAfectacion", "TipoAfectacion")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdTipoAfectacion")
                        .IsRequired()
                        .HasConstraintName("FK_iIdTipoAfectacion");

                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoDominio.EntTipoDominio", "TiposDominio")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdTipoDomninio")
                        .IsRequired()
                        .HasConstraintName("FK_iIdTipoDomninio");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoInmueble.EntTipoInmueble", "TipoInmueble")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdTipoInmueble")
                        .IsRequired()
                        .HasConstraintName("FK_iIdTipoInmueble");

                    b.HasOne("ControlBienes.Entities.Catalogos.UsoInmueble.EntUsoInmueble", "UsoInmueble")
                        .WithMany("DatosInmuebles")
                        .HasForeignKey("iIdUsoInmueble")
                        .IsRequired()
                        .HasConstraintName("FK_iIdUsoInmueble");

                    b.Navigation("DatosRegistral");

                    b.Navigation("EstadoGeneral");

                    b.Navigation("TipoAfectacion");

                    b.Navigation("TipoInmueble");

                    b.Navigation("TiposDominio");

                    b.Navigation("UsoInmueble");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoRegistral.EntDatoRegistral", b =>
                {
                    b.HasOne("ControlBienes.Entities.Catalogos.OrigenValor.EntOrigenValor", "OrigenValor")
                        .WithMany("DatosRegistrales")
                        .HasForeignKey("iIdOrigenValor")
                        .IsRequired()
                        .HasConstraintName("FK_iIdOrigenValor");

                    b.Navigation("OrigenValor");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Desincorporacion.EntDetalleDesincorporacion", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", "Empleado")
                        .WithMany("DetallesDesincorporaciones")
                        .HasForeignKey("iIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDesincorporaciones_iIdEmpleado");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("DetallesDesincorporaciones")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDesincorporaciones_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("DetallesDesincorporaciones")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDesincorporaciones_iIdUnidadAdministrativa");

                    b.Navigation("Empleado");

                    b.Navigation("TipoBien");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestinoFinal", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Afectacion.EntAfectacion", "Afectacion")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdAfectacion")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdAfectacion");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestruccion", "DetalleDestruccion")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdDetalleDestruccion")
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdDetalleDestruccion");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleEnagenacion", "DetalleEnagenacion")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdDetalleEnagenacion")
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdDetalleEnagenacion");

                    b.HasOne("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", "Empleado")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdEmpleado");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("DetallesDestinoFinales")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesDestinoFinales_iIdUnidadAdministrativa");

                    b.Navigation("Afectacion");

                    b.Navigation("DetalleDestruccion");

                    b.Navigation("DetalleEnagenacion");

                    b.Navigation("Empleado");

                    b.Navigation("TipoBien");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.EtapaTramite.EntEtapaTramite", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "EtapaDestino")
                        .WithMany("EtapasTramitesDestino")
                        .HasForeignKey("iIdEtapaDestino")
                        .IsRequired()
                        .HasConstraintName("FK_EtapasTramites_iIdEtapaDestino");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "EtapaOrigen")
                        .WithMany("EtapasTramitesOrigen")
                        .HasForeignKey("iIdEtapaOrigen")
                        .IsRequired()
                        .HasConstraintName("FK_EtapasTramites_iIdEtapaOrigen");

                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", "TipoTramite")
                        .WithMany("EtapasTramites")
                        .HasForeignKey("iIdTipoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_EtapasTramites_iIdTipoTramite");

                    b.Navigation("EtapaDestino");

                    b.Navigation("EtapaOrigen");

                    b.Navigation("TipoTramite");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Factura.EntFactura", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.DatoVehicular.EntDatoVehicular", "DatoVehicular")
                        .WithMany("Facturas")
                        .HasForeignKey("iIdDatoVehicular")
                        .HasConstraintName("FK_Facturas_iIdDatoVehicular");

                    b.Navigation("DatoVehicular");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Historial.EntHistorial", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", "Bien")
                        .WithMany("Historiales")
                        .HasForeignKey("iIdBien")
                        .IsRequired()
                        .HasConstraintName("FK_Depreciaciones_iIdBien");

                    b.HasOne("ControlBienes.Entities.Sistema.Modulo.EntModulo", "Modulo")
                        .WithMany("Historiales")
                        .HasForeignKey("iIdModulo")
                        .IsRequired()
                        .HasConstraintName("FK_Historiales_iIdModulo");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", "Solicitud")
                        .WithMany("Historiales")
                        .HasForeignKey("iIdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_Historiales_iIdSolicitud");

                    b.HasOne("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", "SubModulo")
                        .WithMany("Historiales")
                        .HasForeignKey("iIdSubModulo")
                        .IsRequired()
                        .HasConstraintName("FK_Historiales_iIdSubModulo");

                    b.Navigation("Bien");

                    b.Navigation("Modulo");

                    b.Navigation("Solicitud");

                    b.Navigation("SubModulo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Modificacion.EntDetalleModificacion", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", "Bien")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdBien");

                    b.HasOne("ControlBienes.Entities.General.BMS.EntBms", "Bms")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdBms")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdBMS");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", "DatoInmueble")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdDatoInmueble")
                        .HasConstraintName("FK_DetallesModificaciones_iIdDatosInmueblesModificaciones");

                    b.HasOne("ControlBienes.Entities.Catalogos.EstadoFisico.EntEstadoFisico", "EstadoFisico")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdEstadoFisico")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdEstadoFisico");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "Etapa")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdEtapa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdEtapa");

                    b.HasOne("ControlBienes.Entities.Catalogos.Familia.EntFamilia", "Familia")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdFamilia")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdFamilia");

                    b.HasOne("ControlBienes.Entities.General.Municipio.EntMunicipio", "Municipio")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdMunicipio")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdMunicipio");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", "Solicitud")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdSolicitud");

                    b.HasOne("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", "Subfamilia")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdSubfamilia")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdSubfamilia");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoAdquisicion.EntTipoAdquisicion", "TipoAdquisicion")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdTipoAdquisicion")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdTipoAdquisicion");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", "Ubicacion")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdUbicacion")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdUbicacion");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("DetallesModificaciones")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesModificaciones_iIdUnidadAdministrativa");

                    b.Navigation("Bien");

                    b.Navigation("Bms");

                    b.Navigation("DatoInmueble");

                    b.Navigation("EstadoFisico");

                    b.Navigation("Etapa");

                    b.Navigation("Familia");

                    b.Navigation("Municipio");

                    b.Navigation("Solicitud");

                    b.Navigation("Subfamilia");

                    b.Navigation("TipoAdquisicion");

                    b.Navigation("TipoBien");

                    b.Navigation("Ubicacion");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.MotivoTramite.EntMotivoTramite", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", "TiposTramite")
                        .WithMany("MotivosTramites")
                        .HasForeignKey("iIdTipoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_MotivosTramites_iIdTipoTramite");

                    b.Navigation("TiposTramite");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Movimiento.EntDetalleMovimiento", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Municipio.EntMunicipio", "Municipio")
                        .WithMany("DetallesMovimientos")
                        .HasForeignKey("iIdMunicipio")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesMovimientos_iIdMunicipio");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "NuevaUnidadAdministrativa")
                        .WithMany("DetallesMovimientoIIdNuevaUnidadAdministrativaNavigations")
                        .HasForeignKey("iIdNuevaUnidadAdministrativa")
                        .HasConstraintName("FK_DetallesMovimientos_iIdNuevaUnidadAdministrativa");

                    b.HasOne("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", "TipoBien")
                        .WithMany("DetallesMovimientos")
                        .HasForeignKey("iIdTipoBien")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesMovimientos_iIdTipoBien");

                    b.HasOne("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", "Ubicacion")
                        .WithMany("DetallesMovimientos")
                        .HasForeignKey("iIdUbicacion")
                        .HasConstraintName("FK_DetallesMovimientos_iIdUbicacion");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("DetallesMovimientoIIdUnidadAdministrativaNavigations")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesMovimientos_iIdUnidadAdministrativa");

                    b.Navigation("Municipio");

                    b.Navigation("NuevaUnidadAdministrativa");

                    b.Navigation("TipoBien");

                    b.Navigation("Ubicacion");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Seguimiento.EntSeguimiento", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntDetalleSolicitud", "DetalleSolicitud")
                        .WithMany("Seguimientos")
                        .HasForeignKey("iIdDetalleSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimientos_iIdDetalleSolicitud");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "Etapa")
                        .WithMany("Seguimientos")
                        .HasForeignKey("iIdEtapa")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimientos_iIdEtapa");

                    b.HasOne("ControlBienes.Entities.Sistema.Modulo.EntModulo", "Modulo")
                        .WithMany("Seguimientos")
                        .HasForeignKey("iIdModulo")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimientos_iIdModulo");

                    b.HasOne("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", "SubModulo")
                        .WithMany("Seguimientos")
                        .HasForeignKey("iIdSubModulo")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimientos_iIdSubModulo");

                    b.HasOne("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", "Usuario")
                        .WithMany("Seguimientos")
                        .HasForeignKey("iIdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Seguimientos_iIdUsuario");

                    b.Navigation("DetalleSolicitud");

                    b.Navigation("Etapa");

                    b.Navigation("Modulo");

                    b.Navigation("SubModulo");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntDetalleSolicitud", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Alta.EntDetalleAlta", "DetalleAlta")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleAlta")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleAlta");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Baja.EntDetalleBaja", "DetalleBaja")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleBaja")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleBaja");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Desincorporacion.EntDetalleDesincorporacion", "DetalleDesincorporacion")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleDesincorporacion")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleDesincorporacion");

                    b.HasOne("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestinoFinal", "DetalleDestinoFinal")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleDestinoFinal")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleDestinoFinal");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Modificacion.EntDetalleModificacion", "DetalleModificacion")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleModificacion")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleModificacion");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Movimiento.EntDetalleMovimiento", "DetalleMovimiento")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdDetalleMovimiento")
                        .HasConstraintName("FK_DetallesSolicitudes_iIdDetalleMovimiento");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "Etapa")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdEtapa")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesSolicitudes_iIdEtapa");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", "Solicitud")
                        .WithMany("DetallesSolicitudes")
                        .HasForeignKey("iIdSolicitud")
                        .IsRequired()
                        .HasConstraintName("FK_DetallesSolicitudes_iIdSolicitud");

                    b.Navigation("DetalleAlta");

                    b.Navigation("DetalleBaja");

                    b.Navigation("DetalleDesincorporacion");

                    b.Navigation("DetalleDestinoFinal");

                    b.Navigation("DetalleModificacion");

                    b.Navigation("DetalleMovimiento");

                    b.Navigation("Etapa");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", b =>
                {
                    b.HasOne("ControlBienes.Entities.Patrimonio.Afectacion.EntAfectacion", "Afectacion")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdAfectacion")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdAfectacionSolicitud");

                    b.HasOne("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", "Empleado")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdEmpleado")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdEmpleado");

                    b.HasOne("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", "Etapa")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdEtapa")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdEtapa");

                    b.HasOne("ControlBienes.Entities.Patrimonio.MotivoTramite.EntMotivoTramite", "MotivoTramite")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdMotivoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdMotivoTramite");

                    b.HasOne("ControlBienes.Entities.General.Periodo.EntPeriodo", "Periodo")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdPeriodo")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdPeriodo");

                    b.HasOne("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", "TiposTramite")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdTipoTramite")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdTipoTramite");

                    b.HasOne("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", "UnidadAdministrativa")
                        .WithMany("Solicitudes")
                        .HasForeignKey("iIdUnidadAdministrativa")
                        .IsRequired()
                        .HasConstraintName("FK_Solicitudes_iIdUnidadAdministrativa");

                    b.Navigation("Afectacion");

                    b.Navigation("Empleado");

                    b.Navigation("Etapa");

                    b.Navigation("MotivoTramite");

                    b.Navigation("Periodo");

                    b.Navigation("TiposTramite");

                    b.Navigation("UnidadAdministrativa");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", b =>
                {
                    b.HasOne("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", "SubModulo")
                        .WithMany("TiposTramites")
                        .HasForeignKey("iIdSubModulo")
                        .IsRequired()
                        .HasConstraintName("FK_TiposTramites_iIdModulo");

                    b.Navigation("SubModulo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Nombramiento.EntNombramiento", "Nombramiento")
                        .WithMany("Empleados")
                        .HasForeignKey("iIdNombramiento")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_iIdNombramiento");

                    b.HasOne("ControlBienes.Entities.Seguridad.Persona.EntPersona", "Persona")
                        .WithMany("Empleados")
                        .HasForeignKey("iIdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_iIdPersona");

                    b.HasOne("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", "Usuario")
                        .WithMany("Empleados")
                        .HasForeignKey("iIdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_Empleados_iIdUsuario");

                    b.Navigation("Nombramiento");

                    b.Navigation("Persona");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Persona.EntPersona", b =>
                {
                    b.HasOne("ControlBienes.Entities.General.Nacionalidad.EntNacionalidad", "Nacionalidad")
                        .WithMany("Personas")
                        .HasForeignKey("iIdNacionalidad")
                        .IsRequired()
                        .HasConstraintName("FK_Personas_iIdNacionalidad");

                    b.Navigation("Nacionalidad");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.RolPermiso.EntRolPermiso", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", "Permiso")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("iIdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK_RolesPermisos_iIdPermiso");

                    b.HasOne("ControlBienes.Entities.Seguridad.Rol.EntRol", "Rol")
                        .WithMany("RolesPermisos")
                        .HasForeignKey("iIdRol")
                        .IsRequired()
                        .HasConstraintName("FK_RolesPermisos_iIdRol");

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.UsuarioPermiso.EntUsuarioPermiso", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", "Permiso")
                        .WithMany("UsuariosPermisos")
                        .HasForeignKey("iIdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK_UsuariosPermisos_iIdPermiso");

                    b.HasOne("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", "Usuario")
                        .WithMany("UsuariosPermisos")
                        .HasForeignKey("iIdUsuario")
                        .IsRequired()
                        .HasConstraintName("FK_UsuariosPermisos_iIdUsuario");

                    b.Navigation("Permiso");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.UsuarioRol.EntUsuarioRol", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Rol.EntRol", "Rol")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuariosRoles_iIdRolUsuario");

                    b.HasOne("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_UsuariosRoles_iIdUsuario");

                    b.Navigation("Rol");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Catalogo.EntCatalogo", b =>
                {
                    b.HasOne("ControlBienes.Entities.Sistema.Modulo.EntModulo", "Modulo")
                        .WithMany("Catalogos")
                        .HasForeignKey("iIdModulo")
                        .HasConstraintName("FK_Catalogos_iIdModulo");

                    b.HasOne("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", "Permiso")
                        .WithMany("Catalogos")
                        .HasForeignKey("iIdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK_Catalogos_iIdPermiso");

                    b.Navigation("Modulo");

                    b.Navigation("Permiso");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.ColumnaTabla.EntColumnasTabla", b =>
                {
                    b.HasOne("ControlBienes.Entities.Sistema.Catalogo.EntCatalogo", "Catalogo")
                        .WithMany("ColumnasTablas")
                        .HasForeignKey("iIdCatalogo")
                        .HasConstraintName("FK_ColumnasTablas_iIdCatalogo");

                    b.HasOne("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", "SubModulo")
                        .WithMany("ColumnasTablas")
                        .HasForeignKey("iIdSubModulo")
                        .HasConstraintName("FK_ColumnasTablas_iIdSubmodulo");

                    b.Navigation("Catalogo");

                    b.Navigation("SubModulo");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Modulo.EntModulo", b =>
                {
                    b.HasOne("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", "Permiso")
                        .WithMany("Modulos")
                        .HasForeignKey("iIdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK_Modulos_iIdPermiso");

                    b.Navigation("Permiso");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", b =>
                {
                    b.HasOne("ControlBienes.Entities.Sistema.Modulo.EntModulo", "Modulo")
                        .WithMany("SubModulos")
                        .HasForeignKey("iIdModulo")
                        .IsRequired()
                        .HasConstraintName("FK_SubModulos_iIdModulo");

                    b.HasOne("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", "Permiso")
                        .WithMany("SubModulos")
                        .HasForeignKey("iIdPermiso")
                        .IsRequired()
                        .HasConstraintName("FK_SubModulos_iIdPermiso");

                    b.HasOne("ControlBienes.Entities.Sistema.Seccion.EntSeccion", "Seccion")
                        .WithMany("SubModulos")
                        .HasForeignKey("iIdSeccion")
                        .IsRequired()
                        .HasConstraintName("FK_SubModulos_iIdSeccion");

                    b.Navigation("Modulo");

                    b.Navigation("Permiso");

                    b.Navigation("Seccion");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntBienAlmacen", b =>
                {
                    b.Navigation("MovimientosBienes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntFuenteFinanciamiento", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMetodoAdquisicion", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMetodoCosteo", b =>
                {
                    b.Navigation("Almacenes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntMovimiento", b =>
                {
                    b.Navigation("MovimientosBienes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntProgramasOperativo", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntProveedor", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Almacen.EntTipoMovimiento", b =>
                {
                    b.Navigation("ConceptosMovimientos");

                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajo", b =>
                {
                    b.Navigation("CentroTrabajoTurnos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CentroTrabajo.EntCentroTrabajoTurno", b =>
                {
                    b.Navigation("Titulares");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.ClaseVehicular.EntClaseVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.ClaveVehicular.EntClaveVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Color.EntColor", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.CombustibleVehicular.EntCombustibleVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntAlmacen", b =>
                {
                    b.Navigation("Anaqueles");

                    b.Navigation("Bienes");

                    b.Navigation("Movimientos");

                    b.Navigation("Zonas");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EntConceptoMovimiento", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EstadoFisico.EntEstadoFisico", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.EstadoGeneral.EntEstadoGeneral", b =>
                {
                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Familia.EntFamilia", b =>
                {
                    b.Navigation("BienesAlmacen");

                    b.Navigation("BienesPatrimonio");

                    b.Navigation("Bms");

                    b.Navigation("CaracteristicasBienes");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("Movimientos");

                    b.Navigation("Subfamilia");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.LineaVehicular.EntLineaVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Marca.EntMarca", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.OrigenValor.EntOrigenValor", b =>
                {
                    b.Navigation("DatosRegistrales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Subfamilia.EntSubfamilia", b =>
                {
                    b.Navigation("BienesAlmacen");

                    b.Navigation("BienesPatrimonio");

                    b.Navigation("Bms");

                    b.Navigation("CaracteristicasBienes");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoAdquisicion.EntTipoAdquisicion", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoAfectacion.EntTipoAfectacion", b =>
                {
                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoBien.EntTipoBien", b =>
                {
                    b.Navigation("Bajas");

                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesDesincorporaciones");

                    b.Navigation("DetallesDestinoFinales");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesMovimientos");

                    b.Navigation("Familia");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoInmueble.EntTipoInmueble", b =>
                {
                    b.Navigation("BajasInmuebles");

                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.TipoVehicular.EntTipoVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Turno.EntTurno", b =>
                {
                    b.Navigation("CentroTrabajoTurnos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.Ubicacion.EntUbicacion", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesMovimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.UsoInmueble.EntUsoInmueble", b =>
                {
                    b.Navigation("BajasInmuebles");

                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Catalogos.VersionVehicular.EntVersionVehicular", b =>
                {
                    b.Navigation("DatosGenerales");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.BMS.EntBms", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("MovimientosBienes");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Cuenta.EntCuenta", b =>
                {
                    b.Navigation("Almacenes");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Municipio.EntMunicipio", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("CentrosTrabajos");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesMovimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Nacionalidad.EntNacionalidad", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Nombramiento.EntNombramiento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.Periodo.EntPeriodo", b =>
                {
                    b.Navigation("Almacenes");

                    b.Navigation("BienesPatrimonio");

                    b.Navigation("Resguardantes");

                    b.Navigation("Solicitudes");

                    b.Navigation("UnidadesAdministrativas");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.TipoNivel.EntTipoNivel", b =>
                {
                    b.Navigation("UnidadesAdministrativas");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.TipoResponsable.EntTipoResponsable", b =>
                {
                    b.Navigation("Resguardantes");
                });

            modelBuilder.Entity("ControlBienes.Entities.General.UnidadAdministrativa.EntUnidadAdministrativa", b =>
                {
                    b.Navigation("Bajas");

                    b.Navigation("BienesPatrimonio");

                    b.Navigation("CentrosTrabajos");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesDesincorporaciones");

                    b.Navigation("DetallesDestinoFinales");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesMovimientoIIdNuevaUnidadAdministrativaNavigations");

                    b.Navigation("DetallesMovimientoIIdUnidadAdministrativaNavigations");

                    b.Navigation("Resguardantes");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Afectacion.EntAfectacion", b =>
                {
                    b.Navigation("DetallesDestinoFinales");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Alta.EntDetalleAlta", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntBaja", b =>
                {
                    b.Navigation("DetallesBajas");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Baja.EntDetalleBaja", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.BajaInmueble.EntBajaInmueble", b =>
                {
                    b.Navigation("DetallesBajas");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Bien.EntrBienPatrimonio", b =>
                {
                    b.Navigation("BajasInmuebles");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoInmueble.EntDatoInmueble", b =>
                {
                    b.Navigation("BienesPatrimonio");

                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoRegistral.EntDatoRegistral", b =>
                {
                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DatoVehicular.EntDatoVehicular", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Desincorporacion.EntDetalleDesincorporacion", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestinoFinal", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleDestruccion", b =>
                {
                    b.Navigation("DetallesDestinoFinales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.DestinoFinal.EntDetalleEnagenacion", b =>
                {
                    b.Navigation("DetallesDestinoFinales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Etapa.EntEtapa", b =>
                {
                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesSolicitudes");

                    b.Navigation("EtapasTramitesDestino");

                    b.Navigation("EtapasTramitesOrigen");

                    b.Navigation("Seguimientos");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Factura.EntFactura", b =>
                {
                    b.Navigation("DetallesAlta");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Licitacion.EntLicitacion", b =>
                {
                    b.Navigation("DetallesAlta");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Modificacion.EntDetalleModificacion", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.MotivoTramite.EntMotivoTramite", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Movimiento.EntDetalleMovimiento", b =>
                {
                    b.Navigation("DetallesSolicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntDetalleSolicitud", b =>
                {
                    b.Navigation("Seguimientos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.Solicitud.EntSolicitud", b =>
                {
                    b.Navigation("DetallesAlta");

                    b.Navigation("DetallesBajas");

                    b.Navigation("DetallesModificaciones");

                    b.Navigation("DetallesSolicitudes");

                    b.Navigation("Historiales");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoDominio.EntTipoDominio", b =>
                {
                    b.Navigation("BajasInmuebles");

                    b.Navigation("DatosInmuebles");
                });

            modelBuilder.Entity("ControlBienes.Entities.Patrimonio.TipoTramite.EntTipoTramite", b =>
                {
                    b.Navigation("Documentos");

                    b.Navigation("EtapasTramites");

                    b.Navigation("MotivosTramites");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Empleado.EntEmpleado", b =>
                {
                    b.Navigation("Almacenes");

                    b.Navigation("Bajas");

                    b.Navigation("DetallesDesincorporaciones");

                    b.Navigation("DetallesDestinoFinales");

                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Permiso.EntPermiso", b =>
                {
                    b.Navigation("Catalogos");

                    b.Navigation("Modulos");

                    b.Navigation("RolesPermisos");

                    b.Navigation("SubModulos");

                    b.Navigation("UsuariosPermisos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Persona.EntPersona", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Resguardantes");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Rol.EntRol", b =>
                {
                    b.Navigation("RolesPermisos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Seguridad.Usuario.EntUsuario", b =>
                {
                    b.Navigation("Empleados");

                    b.Navigation("Seguimientos");

                    b.Navigation("UsuariosPermisos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Catalogo.EntCatalogo", b =>
                {
                    b.Navigation("ColumnasTablas");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Modulo.EntModulo", b =>
                {
                    b.Navigation("Catalogos");

                    b.Navigation("Historiales");

                    b.Navigation("Seguimientos");

                    b.Navigation("SubModulos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.Seccion.EntSeccion", b =>
                {
                    b.Navigation("SubModulos");
                });

            modelBuilder.Entity("ControlBienes.Entities.Sistema.SubModulo.EntSubModulo", b =>
                {
                    b.Navigation("ColumnasTablas");

                    b.Navigation("Documentos");

                    b.Navigation("Historiales");

                    b.Navigation("Seguimientos");

                    b.Navigation("TiposTramites");
                });
#pragma warning restore 612, 618
        }
    }
}
